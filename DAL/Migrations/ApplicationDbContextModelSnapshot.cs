// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BusStopTrip", b =>
                {
                    b.Property<int>("BusStopsid")
                        .HasColumnType("int");

                    b.Property<int>("Tripsid")
                        .HasColumnType("int");

                    b.HasKey("BusStopsid", "Tripsid");

                    b.HasIndex("Tripsid");

                    b.ToTable("BusStopTrip");
                });

            modelBuilder.Entity("DAL.Entity.Bus", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("isAvailable")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("trip_Id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("trip_Id");

                    b.ToTable("Busses");
                });

            modelBuilder.Entity("DAL.Entity.BusStop", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("BusStops");
                });

            modelBuilder.Entity("DAL.Entity.Card", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("cardState")
                        .HasColumnType("int");

                    b.Property<DateTime>("suitableFrom")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("suitableTo")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("DAL.Entity.Driver", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("bus_Id")
                        .HasColumnType("int");

                    b.Property<int>("card_Id")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("isAvailable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("bus_Id");

                    b.HasIndex("card_Id");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("DAL.Entity.Passanger", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("bus_Id")
                        .HasColumnType("int");

                    b.Property<int>("card_Id")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("isInBus")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("bus_Id");

                    b.HasIndex("card_Id");

                    b.ToTable("Passangers");
                });

            modelBuilder.Entity("DAL.Entity.Schedule", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("arrivalTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("departureTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("trip_Id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("trip_Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("DAL.Entity.Trip", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("BusStopTrip", b =>
                {
                    b.HasOne("DAL.Entity.BusStop", null)
                        .WithMany()
                        .HasForeignKey("BusStopsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entity.Trip", null)
                        .WithMany()
                        .HasForeignKey("Tripsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Entity.Bus", b =>
                {
                    b.HasOne("DAL.Entity.Trip", "Trip")
                        .WithMany()
                        .HasForeignKey("trip_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("DAL.Entity.Driver", b =>
                {
                    b.HasOne("DAL.Entity.Bus", "Bus")
                        .WithMany()
                        .HasForeignKey("bus_Id");

                    b.HasOne("DAL.Entity.Card", "Card")
                        .WithMany()
                        .HasForeignKey("card_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("Card");
                });

            modelBuilder.Entity("DAL.Entity.Passanger", b =>
                {
                    b.HasOne("DAL.Entity.Bus", "Bus")
                        .WithMany()
                        .HasForeignKey("bus_Id");

                    b.HasOne("DAL.Entity.Card", "Card")
                        .WithMany()
                        .HasForeignKey("card_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("Card");
                });

            modelBuilder.Entity("DAL.Entity.Schedule", b =>
                {
                    b.HasOne("DAL.Entity.Trip", "Trip")
                        .WithMany()
                        .HasForeignKey("trip_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });
#pragma warning restore 612, 618
        }
    }
}
